//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.42
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Perfilac {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : System.Data.DataSet {
        
        private NTipoDataTable tableNTipo;
        
        private NTipoEnchapeDataTable tableNTipoEnchape;
        
        private TClienteDataTable tableTCliente;
        
        private TPersonaClienteDataTable tableTPersonaCliente;
        
        private TProductoDataTable tableTProducto;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["NTipo"] != null)) {
                    base.Tables.Add(new NTipoDataTable(ds.Tables["NTipo"]));
                }
                if ((ds.Tables["NTipoEnchape"] != null)) {
                    base.Tables.Add(new NTipoEnchapeDataTable(ds.Tables["NTipoEnchape"]));
                }
                if ((ds.Tables["TCliente"] != null)) {
                    base.Tables.Add(new TClienteDataTable(ds.Tables["TCliente"]));
                }
                if ((ds.Tables["TPersonaCliente"] != null)) {
                    base.Tables.Add(new TPersonaClienteDataTable(ds.Tables["TPersonaCliente"]));
                }
                if ((ds.Tables["TProducto"] != null)) {
                    base.Tables.Add(new TProductoDataTable(ds.Tables["TProducto"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NTipoDataTable NTipo {
            get {
                return this.tableNTipo;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NTipoEnchapeDataTable NTipoEnchape {
            get {
                return this.tableNTipoEnchape;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TClienteDataTable TCliente {
            get {
                return this.tableTCliente;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TPersonaClienteDataTable TPersonaCliente {
            get {
                return this.tableTPersonaCliente;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TProductoDataTable TProducto {
            get {
                return this.tableTProducto;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["NTipo"] != null)) {
                    base.Tables.Add(new NTipoDataTable(ds.Tables["NTipo"]));
                }
                if ((ds.Tables["NTipoEnchape"] != null)) {
                    base.Tables.Add(new NTipoEnchapeDataTable(ds.Tables["NTipoEnchape"]));
                }
                if ((ds.Tables["TCliente"] != null)) {
                    base.Tables.Add(new TClienteDataTable(ds.Tables["TCliente"]));
                }
                if ((ds.Tables["TPersonaCliente"] != null)) {
                    base.Tables.Add(new TPersonaClienteDataTable(ds.Tables["TPersonaCliente"]));
                }
                if ((ds.Tables["TProducto"] != null)) {
                    base.Tables.Add(new TProductoDataTable(ds.Tables["TProducto"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableNTipo = ((NTipoDataTable)(base.Tables["NTipo"]));
            if ((initTable == true)) {
                if ((this.tableNTipo != null)) {
                    this.tableNTipo.InitVars();
                }
            }
            this.tableNTipoEnchape = ((NTipoEnchapeDataTable)(base.Tables["NTipoEnchape"]));
            if ((initTable == true)) {
                if ((this.tableNTipoEnchape != null)) {
                    this.tableNTipoEnchape.InitVars();
                }
            }
            this.tableTCliente = ((TClienteDataTable)(base.Tables["TCliente"]));
            if ((initTable == true)) {
                if ((this.tableTCliente != null)) {
                    this.tableTCliente.InitVars();
                }
            }
            this.tableTPersonaCliente = ((TPersonaClienteDataTable)(base.Tables["TPersonaCliente"]));
            if ((initTable == true)) {
                if ((this.tableTPersonaCliente != null)) {
                    this.tableTPersonaCliente.InitVars();
                }
            }
            this.tableTProducto = ((TProductoDataTable)(base.Tables["TProducto"]));
            if ((initTable == true)) {
                if ((this.tableTProducto != null)) {
                    this.tableTProducto.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableNTipo = new NTipoDataTable();
            base.Tables.Add(this.tableNTipo);
            this.tableNTipoEnchape = new NTipoEnchapeDataTable();
            base.Tables.Add(this.tableNTipoEnchape);
            this.tableTCliente = new TClienteDataTable();
            base.Tables.Add(this.tableTCliente);
            this.tableTPersonaCliente = new TPersonaClienteDataTable();
            base.Tables.Add(this.tableTPersonaCliente);
            this.tableTProducto = new TProductoDataTable();
            base.Tables.Add(this.tableTProducto);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNTipo() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNTipoEnchape() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTCliente() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTPersonaCliente() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTProducto() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void NTipoRowChangeEventHandler(object sender, NTipoRowChangeEvent e);
        
        public delegate void NTipoEnchapeRowChangeEventHandler(object sender, NTipoEnchapeRowChangeEvent e);
        
        public delegate void TClienteRowChangeEventHandler(object sender, TClienteRowChangeEvent e);
        
        public delegate void TPersonaClienteRowChangeEventHandler(object sender, TPersonaClienteRowChangeEvent e);
        
        public delegate void TProductoRowChangeEventHandler(object sender, TProductoRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NTipoDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnId;
            
            private System.Data.DataColumn columnnombre;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NTipoDataTable() {
                this.TableName = "NTipo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NTipoDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NTipoDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NTipoRow this[int index] {
                get {
                    return ((NTipoRow)(this.Rows[index]));
                }
            }
            
            public event NTipoRowChangeEventHandler NTipoRowChanging;
            
            public event NTipoRowChangeEventHandler NTipoRowChanged;
            
            public event NTipoRowChangeEventHandler NTipoRowDeleting;
            
            public event NTipoRowChangeEventHandler NTipoRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNTipoRow(NTipoRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NTipoRow AddNTipoRow(string nombre) {
                NTipoRow rowNTipoRow = ((NTipoRow)(this.NewRow()));
                rowNTipoRow.ItemArray = new object[] {
                        null,
                        nombre};
                this.Rows.Add(rowNTipoRow);
                return rowNTipoRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NTipoRow FindById(int Id) {
                return ((NTipoRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                NTipoDataTable cln = ((NTipoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new NTipoDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnnombre = base.Columns["nombre"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new System.Data.DataColumn("Id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnnombre = new System.Data.DataColumn("nombre", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnnombre.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NTipoRow NewNTipoRow() {
                return ((NTipoRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new NTipoRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(NTipoRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NTipoRowChanged != null)) {
                    this.NTipoRowChanged(this, new NTipoRowChangeEvent(((NTipoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NTipoRowChanging != null)) {
                    this.NTipoRowChanging(this, new NTipoRowChangeEvent(((NTipoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NTipoRowDeleted != null)) {
                    this.NTipoRowDeleted(this, new NTipoRowChangeEvent(((NTipoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NTipoRowDeleting != null)) {
                    this.NTipoRowDeleting(this, new NTipoRowChangeEvent(((NTipoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNTipoRow(NTipoRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NTipoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NTipoEnchapeDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnId;
            
            private System.Data.DataColumn columnnombre;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NTipoEnchapeDataTable() {
                this.TableName = "NTipoEnchape";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NTipoEnchapeDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NTipoEnchapeDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NTipoEnchapeRow this[int index] {
                get {
                    return ((NTipoEnchapeRow)(this.Rows[index]));
                }
            }
            
            public event NTipoEnchapeRowChangeEventHandler NTipoEnchapeRowChanging;
            
            public event NTipoEnchapeRowChangeEventHandler NTipoEnchapeRowChanged;
            
            public event NTipoEnchapeRowChangeEventHandler NTipoEnchapeRowDeleting;
            
            public event NTipoEnchapeRowChangeEventHandler NTipoEnchapeRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNTipoEnchapeRow(NTipoEnchapeRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NTipoEnchapeRow AddNTipoEnchapeRow(string nombre) {
                NTipoEnchapeRow rowNTipoEnchapeRow = ((NTipoEnchapeRow)(this.NewRow()));
                rowNTipoEnchapeRow.ItemArray = new object[] {
                        null,
                        nombre};
                this.Rows.Add(rowNTipoEnchapeRow);
                return rowNTipoEnchapeRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NTipoEnchapeRow FindById(int Id) {
                return ((NTipoEnchapeRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                NTipoEnchapeDataTable cln = ((NTipoEnchapeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new NTipoEnchapeDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnnombre = base.Columns["nombre"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new System.Data.DataColumn("Id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnnombre = new System.Data.DataColumn("nombre", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnnombre.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NTipoEnchapeRow NewNTipoEnchapeRow() {
                return ((NTipoEnchapeRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new NTipoEnchapeRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(NTipoEnchapeRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NTipoEnchapeRowChanged != null)) {
                    this.NTipoEnchapeRowChanged(this, new NTipoEnchapeRowChangeEvent(((NTipoEnchapeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NTipoEnchapeRowChanging != null)) {
                    this.NTipoEnchapeRowChanging(this, new NTipoEnchapeRowChangeEvent(((NTipoEnchapeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NTipoEnchapeRowDeleted != null)) {
                    this.NTipoEnchapeRowDeleted(this, new NTipoEnchapeRowChangeEvent(((NTipoEnchapeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NTipoEnchapeRowDeleting != null)) {
                    this.NTipoEnchapeRowDeleting(this, new NTipoEnchapeRowChangeEvent(((NTipoEnchapeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNTipoEnchapeRow(NTipoEnchapeRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NTipoEnchapeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TClienteDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnId;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TClienteDataTable() {
                this.TableName = "TCliente";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TClienteDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TClienteDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TClienteRow this[int index] {
                get {
                    return ((TClienteRow)(this.Rows[index]));
                }
            }
            
            public event TClienteRowChangeEventHandler TClienteRowChanging;
            
            public event TClienteRowChangeEventHandler TClienteRowChanged;
            
            public event TClienteRowChangeEventHandler TClienteRowDeleting;
            
            public event TClienteRowChangeEventHandler TClienteRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTClienteRow(TClienteRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TClienteRow AddTClienteRow() {
                TClienteRow rowTClienteRow = ((TClienteRow)(this.NewRow()));
                rowTClienteRow.ItemArray = new object[] {
                        null};
                this.Rows.Add(rowTClienteRow);
                return rowTClienteRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TClienteRow FindById(int Id) {
                return ((TClienteRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                TClienteDataTable cln = ((TClienteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new TClienteDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new System.Data.DataColumn("Id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TClienteRow NewTClienteRow() {
                return ((TClienteRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new TClienteRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(TClienteRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TClienteRowChanged != null)) {
                    this.TClienteRowChanged(this, new TClienteRowChangeEvent(((TClienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TClienteRowChanging != null)) {
                    this.TClienteRowChanging(this, new TClienteRowChangeEvent(((TClienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TClienteRowDeleted != null)) {
                    this.TClienteRowDeleted(this, new TClienteRowChangeEvent(((TClienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TClienteRowDeleting != null)) {
                    this.TClienteRowDeleting(this, new TClienteRowChangeEvent(((TClienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTClienteRow(TClienteRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TClienteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TPersonaClienteDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnId;
            
            private System.Data.DataColumn columnprimerNombre;
            
            private System.Data.DataColumn columnsegundoNombre;
            
            private System.Data.DataColumn columnprimerApellido;
            
            private System.Data.DataColumn columnsegundoApellido;
            
            private System.Data.DataColumn columncliente;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TPersonaClienteDataTable() {
                this.TableName = "TPersonaCliente";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TPersonaClienteDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TPersonaClienteDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn primerNombreColumn {
                get {
                    return this.columnprimerNombre;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn segundoNombreColumn {
                get {
                    return this.columnsegundoNombre;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn primerApellidoColumn {
                get {
                    return this.columnprimerApellido;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn segundoApellidoColumn {
                get {
                    return this.columnsegundoApellido;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn clienteColumn {
                get {
                    return this.columncliente;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TPersonaClienteRow this[int index] {
                get {
                    return ((TPersonaClienteRow)(this.Rows[index]));
                }
            }
            
            public event TPersonaClienteRowChangeEventHandler TPersonaClienteRowChanging;
            
            public event TPersonaClienteRowChangeEventHandler TPersonaClienteRowChanged;
            
            public event TPersonaClienteRowChangeEventHandler TPersonaClienteRowDeleting;
            
            public event TPersonaClienteRowChangeEventHandler TPersonaClienteRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTPersonaClienteRow(TPersonaClienteRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TPersonaClienteRow AddTPersonaClienteRow(string primerNombre, string segundoNombre, string primerApellido, string segundoApellido, int cliente) {
                TPersonaClienteRow rowTPersonaClienteRow = ((TPersonaClienteRow)(this.NewRow()));
                rowTPersonaClienteRow.ItemArray = new object[] {
                        null,
                        primerNombre,
                        segundoNombre,
                        primerApellido,
                        segundoApellido,
                        cliente};
                this.Rows.Add(rowTPersonaClienteRow);
                return rowTPersonaClienteRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TPersonaClienteRow FindById(int Id) {
                return ((TPersonaClienteRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                TPersonaClienteDataTable cln = ((TPersonaClienteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new TPersonaClienteDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnprimerNombre = base.Columns["primerNombre"];
                this.columnsegundoNombre = base.Columns["segundoNombre"];
                this.columnprimerApellido = base.Columns["primerApellido"];
                this.columnsegundoApellido = base.Columns["segundoApellido"];
                this.columncliente = base.Columns["cliente"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new System.Data.DataColumn("Id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnprimerNombre = new System.Data.DataColumn("primerNombre", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnprimerNombre);
                this.columnsegundoNombre = new System.Data.DataColumn("segundoNombre", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegundoNombre);
                this.columnprimerApellido = new System.Data.DataColumn("primerApellido", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnprimerApellido);
                this.columnsegundoApellido = new System.Data.DataColumn("segundoApellido", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegundoApellido);
                this.columncliente = new System.Data.DataColumn("cliente", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncliente);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnprimerNombre.MaxLength = 50;
                this.columnsegundoNombre.MaxLength = 50;
                this.columnprimerApellido.MaxLength = 50;
                this.columnsegundoApellido.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TPersonaClienteRow NewTPersonaClienteRow() {
                return ((TPersonaClienteRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new TPersonaClienteRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(TPersonaClienteRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TPersonaClienteRowChanged != null)) {
                    this.TPersonaClienteRowChanged(this, new TPersonaClienteRowChangeEvent(((TPersonaClienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TPersonaClienteRowChanging != null)) {
                    this.TPersonaClienteRowChanging(this, new TPersonaClienteRowChangeEvent(((TPersonaClienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TPersonaClienteRowDeleted != null)) {
                    this.TPersonaClienteRowDeleted(this, new TPersonaClienteRowChangeEvent(((TPersonaClienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TPersonaClienteRowDeleting != null)) {
                    this.TPersonaClienteRowDeleting(this, new TPersonaClienteRowChangeEvent(((TPersonaClienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTPersonaClienteRow(TPersonaClienteRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TPersonaClienteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TProductoDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnId;
            
            private System.Data.DataColumn columncodigo;
            
            private System.Data.DataColumn columnenchape;
            
            private System.Data.DataColumn columntipo;
            
            private System.Data.DataColumn columndescripcion;
            
            private System.Data.DataColumn columnnoFicha;
            
            private System.Data.DataColumn columnprecioCUP;
            
            private System.Data.DataColumn columnprecioCUC;
            
            private System.Data.DataColumn columnsuministrador;
            
            private System.Data.DataColumn columncolor;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TProductoDataTable() {
                this.TableName = "TProducto";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TProductoDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TProductoDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn codigoColumn {
                get {
                    return this.columncodigo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn enchapeColumn {
                get {
                    return this.columnenchape;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn tipoColumn {
                get {
                    return this.columntipo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn descripcionColumn {
                get {
                    return this.columndescripcion;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn noFichaColumn {
                get {
                    return this.columnnoFicha;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn precioCUPColumn {
                get {
                    return this.columnprecioCUP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn precioCUCColumn {
                get {
                    return this.columnprecioCUC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn suministradorColumn {
                get {
                    return this.columnsuministrador;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn colorColumn {
                get {
                    return this.columncolor;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TProductoRow this[int index] {
                get {
                    return ((TProductoRow)(this.Rows[index]));
                }
            }
            
            public event TProductoRowChangeEventHandler TProductoRowChanging;
            
            public event TProductoRowChangeEventHandler TProductoRowChanged;
            
            public event TProductoRowChangeEventHandler TProductoRowDeleting;
            
            public event TProductoRowChangeEventHandler TProductoRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTProductoRow(TProductoRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TProductoRow AddTProductoRow(string codigo, int enchape, int tipo, string descripcion, string noFicha, decimal precioCUP, decimal precioCUC, string suministrador, string color) {
                TProductoRow rowTProductoRow = ((TProductoRow)(this.NewRow()));
                rowTProductoRow.ItemArray = new object[] {
                        null,
                        codigo,
                        enchape,
                        tipo,
                        descripcion,
                        noFicha,
                        precioCUP,
                        precioCUC,
                        suministrador,
                        color};
                this.Rows.Add(rowTProductoRow);
                return rowTProductoRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TProductoRow FindById(int Id) {
                return ((TProductoRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                TProductoDataTable cln = ((TProductoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new TProductoDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columncodigo = base.Columns["codigo"];
                this.columnenchape = base.Columns["enchape"];
                this.columntipo = base.Columns["tipo"];
                this.columndescripcion = base.Columns["descripcion"];
                this.columnnoFicha = base.Columns["noFicha"];
                this.columnprecioCUP = base.Columns["precioCUP"];
                this.columnprecioCUC = base.Columns["precioCUC"];
                this.columnsuministrador = base.Columns["suministrador"];
                this.columncolor = base.Columns["color"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new System.Data.DataColumn("Id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columncodigo = new System.Data.DataColumn("codigo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncodigo);
                this.columnenchape = new System.Data.DataColumn("enchape", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnenchape);
                this.columntipo = new System.Data.DataColumn("tipo", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntipo);
                this.columndescripcion = new System.Data.DataColumn("descripcion", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndescripcion);
                this.columnnoFicha = new System.Data.DataColumn("noFicha", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoFicha);
                this.columnprecioCUP = new System.Data.DataColumn("precioCUP", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnprecioCUP);
                this.columnprecioCUC = new System.Data.DataColumn("precioCUC", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnprecioCUC);
                this.columnsuministrador = new System.Data.DataColumn("suministrador", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuministrador);
                this.columncolor = new System.Data.DataColumn("color", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columncodigo.MaxLength = 50;
                this.columndescripcion.MaxLength = 50;
                this.columnnoFicha.MaxLength = 50;
                this.columnsuministrador.MaxLength = 50;
                this.columncolor.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TProductoRow NewTProductoRow() {
                return ((TProductoRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new TProductoRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(TProductoRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TProductoRowChanged != null)) {
                    this.TProductoRowChanged(this, new TProductoRowChangeEvent(((TProductoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TProductoRowChanging != null)) {
                    this.TProductoRowChanging(this, new TProductoRowChangeEvent(((TProductoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TProductoRowDeleted != null)) {
                    this.TProductoRowDeleted(this, new TProductoRowChangeEvent(((TProductoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TProductoRowDeleting != null)) {
                    this.TProductoRowDeleting(this, new TProductoRowChangeEvent(((TProductoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTProductoRow(TProductoRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TProductoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NTipoRow : System.Data.DataRow {
            
            private NTipoDataTable tableNTipo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NTipoRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNTipo = ((NTipoDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tableNTipo.IdColumn]));
                }
                set {
                    this[this.tableNTipo.IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    try {
                        return ((string)(this[this.tableNTipo.nombreColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'nombre\' de la tabla \'NTipo\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableNTipo.nombreColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreNull() {
                return this.IsNull(this.tableNTipo.nombreColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreNull() {
                this[this.tableNTipo.nombreColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NTipoEnchapeRow : System.Data.DataRow {
            
            private NTipoEnchapeDataTable tableNTipoEnchape;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NTipoEnchapeRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNTipoEnchape = ((NTipoEnchapeDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tableNTipoEnchape.IdColumn]));
                }
                set {
                    this[this.tableNTipoEnchape.IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    try {
                        return ((string)(this[this.tableNTipoEnchape.nombreColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'nombre\' de la tabla \'NTipoEnchape\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableNTipoEnchape.nombreColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreNull() {
                return this.IsNull(this.tableNTipoEnchape.nombreColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreNull() {
                this[this.tableNTipoEnchape.nombreColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TClienteRow : System.Data.DataRow {
            
            private TClienteDataTable tableTCliente;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TClienteRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTCliente = ((TClienteDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tableTCliente.IdColumn]));
                }
                set {
                    this[this.tableTCliente.IdColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TPersonaClienteRow : System.Data.DataRow {
            
            private TPersonaClienteDataTable tableTPersonaCliente;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TPersonaClienteRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTPersonaCliente = ((TPersonaClienteDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tableTPersonaCliente.IdColumn]));
                }
                set {
                    this[this.tableTPersonaCliente.IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string primerNombre {
                get {
                    try {
                        return ((string)(this[this.tableTPersonaCliente.primerNombreColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'primerNombre\' de la tabla \'TPersonaCliente\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTPersonaCliente.primerNombreColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string segundoNombre {
                get {
                    try {
                        return ((string)(this[this.tableTPersonaCliente.segundoNombreColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'segundoNombre\' de la tabla \'TPersonaCliente\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTPersonaCliente.segundoNombreColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string primerApellido {
                get {
                    try {
                        return ((string)(this[this.tableTPersonaCliente.primerApellidoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'primerApellido\' de la tabla \'TPersonaCliente\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTPersonaCliente.primerApellidoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string segundoApellido {
                get {
                    try {
                        return ((string)(this[this.tableTPersonaCliente.segundoApellidoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'segundoApellido\' de la tabla \'TPersonaCliente\' es DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTPersonaCliente.segundoApellidoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cliente {
                get {
                    try {
                        return ((int)(this[this.tableTPersonaCliente.clienteColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'cliente\' de la tabla \'TPersonaCliente\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTPersonaCliente.clienteColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprimerNombreNull() {
                return this.IsNull(this.tableTPersonaCliente.primerNombreColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprimerNombreNull() {
                this[this.tableTPersonaCliente.primerNombreColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssegundoNombreNull() {
                return this.IsNull(this.tableTPersonaCliente.segundoNombreColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsegundoNombreNull() {
                this[this.tableTPersonaCliente.segundoNombreColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprimerApellidoNull() {
                return this.IsNull(this.tableTPersonaCliente.primerApellidoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprimerApellidoNull() {
                this[this.tableTPersonaCliente.primerApellidoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssegundoApellidoNull() {
                return this.IsNull(this.tableTPersonaCliente.segundoApellidoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsegundoApellidoNull() {
                this[this.tableTPersonaCliente.segundoApellidoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsclienteNull() {
                return this.IsNull(this.tableTPersonaCliente.clienteColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetclienteNull() {
                this[this.tableTPersonaCliente.clienteColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TProductoRow : System.Data.DataRow {
            
            private TProductoDataTable tableTProducto;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TProductoRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTProducto = ((TProductoDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tableTProducto.IdColumn]));
                }
                set {
                    this[this.tableTProducto.IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string codigo {
                get {
                    try {
                        return ((string)(this[this.tableTProducto.codigoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'codigo\' de la tabla \'TProducto\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTProducto.codigoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int enchape {
                get {
                    try {
                        return ((int)(this[this.tableTProducto.enchapeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'enchape\' de la tabla \'TProducto\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTProducto.enchapeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int tipo {
                get {
                    try {
                        return ((int)(this[this.tableTProducto.tipoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'tipo\' de la tabla \'TProducto\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTProducto.tipoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descripcion {
                get {
                    try {
                        return ((string)(this[this.tableTProducto.descripcionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'descripcion\' de la tabla \'TProducto\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTProducto.descripcionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string noFicha {
                get {
                    try {
                        return ((string)(this[this.tableTProducto.noFichaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'noFicha\' de la tabla \'TProducto\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTProducto.noFichaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal precioCUP {
                get {
                    try {
                        return ((decimal)(this[this.tableTProducto.precioCUPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'precioCUP\' de la tabla \'TProducto\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTProducto.precioCUPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal precioCUC {
                get {
                    try {
                        return ((decimal)(this[this.tableTProducto.precioCUCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'precioCUC\' de la tabla \'TProducto\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTProducto.precioCUCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string suministrador {
                get {
                    try {
                        return ((string)(this[this.tableTProducto.suministradorColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'suministrador\' de la tabla \'TProducto\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTProducto.suministradorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color {
                get {
                    try {
                        return ((string)(this[this.tableTProducto.colorColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("El valor de la columna \'color\' de la tabla \'TProducto\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTProducto.colorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodigoNull() {
                return this.IsNull(this.tableTProducto.codigoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodigoNull() {
                this[this.tableTProducto.codigoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsenchapeNull() {
                return this.IsNull(this.tableTProducto.enchapeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetenchapeNull() {
                this[this.tableTProducto.enchapeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstipoNull() {
                return this.IsNull(this.tableTProducto.tipoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettipoNull() {
                this[this.tableTProducto.tipoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescripcionNull() {
                return this.IsNull(this.tableTProducto.descripcionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescripcionNull() {
                this[this.tableTProducto.descripcionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnoFichaNull() {
                return this.IsNull(this.tableTProducto.noFichaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnoFichaNull() {
                this[this.tableTProducto.noFichaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprecioCUPNull() {
                return this.IsNull(this.tableTProducto.precioCUPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprecioCUPNull() {
                this[this.tableTProducto.precioCUPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprecioCUCNull() {
                return this.IsNull(this.tableTProducto.precioCUCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprecioCUCNull() {
                this[this.tableTProducto.precioCUCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssuministradorNull() {
                return this.IsNull(this.tableTProducto.suministradorColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsuministradorNull() {
                this[this.tableTProducto.suministradorColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscolorNull() {
                return this.IsNull(this.tableTProducto.colorColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcolorNull() {
                this[this.tableTProducto.colorColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NTipoRowChangeEvent : System.EventArgs {
            
            private NTipoRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NTipoRowChangeEvent(NTipoRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NTipoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NTipoEnchapeRowChangeEvent : System.EventArgs {
            
            private NTipoEnchapeRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NTipoEnchapeRowChangeEvent(NTipoEnchapeRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NTipoEnchapeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TClienteRowChangeEvent : System.EventArgs {
            
            private TClienteRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TClienteRowChangeEvent(TClienteRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TClienteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TPersonaClienteRowChangeEvent : System.EventArgs {
            
            private TPersonaClienteRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TPersonaClienteRowChangeEvent(TPersonaClienteRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TPersonaClienteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TProductoRowChangeEvent : System.EventArgs {
            
            private TProductoRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TProductoRowChangeEvent(TProductoRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TProductoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Perfilac.DataSet1TableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NTipoTableAdapter : System.ComponentModel.Component {
        
        private System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private System.Data.Odbc.OdbcConnection _connection;
        
        private System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NTipoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.Odbc.OdbcDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NTipo";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("nombre", "nombre");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.Odbc.OdbcCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [NTipo] WHERE (([Id] = ?) AND ((? = 1 AND [nombre] IS NULL) OR ([nomb" +
                "re] = ?)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_Id", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Id", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_nombre", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nombre", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_nombre", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nombre", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [NTipo] ([nombre]) VALUES (?)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("nombre", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nombre", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new System.Data.Odbc.OdbcCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [NTipo] SET [nombre] = ? WHERE (([Id] = ?) AND ((? = 1 AND [nombre] IS NUL" +
                "L) OR ([nombre] = ?)))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("nombre", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nombre", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_Id", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Id", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_nombre", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nombre", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_nombre", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nombre", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::Perfilac.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, nombre FROM NTipo";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.NTipoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.NTipoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.NTipoDataTable dataTable = new DataSet1.NTipoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.NTipoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "NTipo");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_nombre) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_nombre == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_nombre));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string nombre) {
            if ((nombre == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(nombre));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string nombre, int Original_Id, string Original_nombre) {
            if ((nombre == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(nombre));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_Id));
            if ((Original_nombre == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_nombre));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NTipoEnchapeTableAdapter : System.ComponentModel.Component {
        
        private System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private System.Data.Odbc.OdbcConnection _connection;
        
        private System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NTipoEnchapeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.Odbc.OdbcDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NTipoEnchape";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("nombre", "nombre");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.Odbc.OdbcCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [NTipoEnchape] WHERE (([Id] = ?) AND ((? = 1 AND [nombre] IS NULL) OR" +
                " ([nombre] = ?)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_Id", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Id", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_nombre", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nombre", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_nombre", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nombre", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [NTipoEnchape] ([nombre]) VALUES (?)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("nombre", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nombre", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new System.Data.Odbc.OdbcCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [NTipoEnchape] SET [nombre] = ? WHERE (([Id] = ?) AND ((? = 1 AND [nombre]" +
                " IS NULL) OR ([nombre] = ?)))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("nombre", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nombre", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_Id", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Id", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_nombre", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nombre", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_nombre", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nombre", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::Perfilac.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, nombre FROM NTipoEnchape";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.NTipoEnchapeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.NTipoEnchapeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.NTipoEnchapeDataTable dataTable = new DataSet1.NTipoEnchapeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.NTipoEnchapeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "NTipoEnchape");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_nombre) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_nombre == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_nombre));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string nombre) {
            if ((nombre == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(nombre));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string nombre, int Original_Id, string Original_nombre) {
            if ((nombre == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(nombre));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_Id));
            if ((Original_nombre == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_nombre));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TClienteTableAdapter : System.ComponentModel.Component {
        
        private System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private System.Data.Odbc.OdbcConnection _connection;
        
        private System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TClienteTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.Odbc.OdbcDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TCliente";
            tableMapping.ColumnMappings.Add("Id", "Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.Odbc.OdbcCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [TCliente] WHERE (([Id] = ?))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_Id", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Id", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [TCliente] DEFAULT VALUES";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand = new System.Data.Odbc.OdbcCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [TCliente] WHERE (([Id] = ?))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_Id", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Id", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::Perfilac.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id FROM TCliente";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.TClienteDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.TClienteDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.TClienteDataTable dataTable = new DataSet1.TClienteDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.TClienteDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "TCliente");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert() {
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Original_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Original_Id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TPersonaClienteTableAdapter : System.ComponentModel.Component {
        
        private System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private System.Data.Odbc.OdbcConnection _connection;
        
        private System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TPersonaClienteTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.Odbc.OdbcDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TPersonaCliente";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("primerNombre", "primerNombre");
            tableMapping.ColumnMappings.Add("segundoNombre", "segundoNombre");
            tableMapping.ColumnMappings.Add("primerApellido", "primerApellido");
            tableMapping.ColumnMappings.Add("segundoApellido", "segundoApellido");
            tableMapping.ColumnMappings.Add("cliente", "cliente");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.Odbc.OdbcCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TPersonaCliente] WHERE (([Id] = ?) AND ((? = 1 AND [primerNombre] IS NULL) OR ([primerNombre] = ?)) AND ((? = 1 AND [segundoNombre] IS NULL) OR ([segundoNombre] = ?)) AND ((? = 1 AND [primerApellido] IS NULL) OR ([primerApellido] = ?)) AND ((? = 1 AND [segundoApellido] IS NULL) OR ([segundoApellido] = ?)) AND ((? = 1 AND [cliente] IS NULL) OR ([cliente] = ?)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_Id", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Id", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_primerNombre", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "primerNombre", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_primerNombre", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "primerNombre", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_segundoNombre", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "segundoNombre", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_segundoNombre", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "segundoNombre", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_primerApellido", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "primerApellido", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_primerApellido", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "primerApellido", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_segundoApellido", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "segundoApellido", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_segundoApellido", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "segundoApellido", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_cliente", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "cliente", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_cliente", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "cliente", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [TPersonaCliente] ([primerNombre], [segundoNombre], [primerApellido]," +
                " [segundoApellido], [cliente]) VALUES (?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("primerNombre", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "primerNombre", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("segundoNombre", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "segundoNombre", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("primerApellido", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "primerApellido", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("segundoApellido", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "segundoApellido", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("cliente", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "cliente", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new System.Data.Odbc.OdbcCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [TPersonaCliente] SET [primerNombre] = ?, [segundoNombre] = ?, [primerApellido] = ?, [segundoApellido] = ?, [cliente] = ? WHERE (([Id] = ?) AND ((? = 1 AND [primerNombre] IS NULL) OR ([primerNombre] = ?)) AND ((? = 1 AND [segundoNombre] IS NULL) OR ([segundoNombre] = ?)) AND ((? = 1 AND [primerApellido] IS NULL) OR ([primerApellido] = ?)) AND ((? = 1 AND [segundoApellido] IS NULL) OR ([segundoApellido] = ?)) AND ((? = 1 AND [cliente] IS NULL) OR ([cliente] = ?)))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("primerNombre", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "primerNombre", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("segundoNombre", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "segundoNombre", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("primerApellido", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "primerApellido", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("segundoApellido", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "segundoApellido", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("cliente", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "cliente", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_Id", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Id", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_primerNombre", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "primerNombre", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_primerNombre", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "primerNombre", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_segundoNombre", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "segundoNombre", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_segundoNombre", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "segundoNombre", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_primerApellido", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "primerApellido", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_primerApellido", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "primerApellido", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_segundoApellido", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "segundoApellido", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_segundoApellido", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "segundoApellido", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_cliente", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "cliente", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_cliente", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "cliente", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::Perfilac.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, primerNombre, segundoNombre, primerApellido, segundoApellido, cliente " +
                "FROM TPersonaCliente";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.TPersonaClienteDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.TPersonaClienteDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.TPersonaClienteDataTable dataTable = new DataSet1.TPersonaClienteDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.TPersonaClienteDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "TPersonaCliente");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_primerNombre, string Original_segundoNombre, string Original_primerApellido, string Original_segundoApellido, System.Nullable<int> Original_cliente) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_primerNombre == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_primerNombre));
            }
            if ((Original_segundoNombre == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_segundoNombre));
            }
            if ((Original_primerApellido == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_primerApellido));
            }
            if ((Original_segundoApellido == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_segundoApellido));
            }
            if ((Original_cliente.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_cliente.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string primerNombre, string segundoNombre, string primerApellido, string segundoApellido, System.Nullable<int> cliente) {
            if ((primerNombre == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(primerNombre));
            }
            if ((segundoNombre == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(segundoNombre));
            }
            if ((primerApellido == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(primerApellido));
            }
            if ((segundoApellido == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(segundoApellido));
            }
            if ((cliente.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(cliente.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string primerNombre, string segundoNombre, string primerApellido, string segundoApellido, System.Nullable<int> cliente, int Original_Id, string Original_primerNombre, string Original_segundoNombre, string Original_primerApellido, string Original_segundoApellido, System.Nullable<int> Original_cliente) {
            if ((primerNombre == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(primerNombre));
            }
            if ((segundoNombre == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(segundoNombre));
            }
            if ((primerApellido == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(primerApellido));
            }
            if ((segundoApellido == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(segundoApellido));
            }
            if ((cliente.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(cliente.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Id));
            if ((Original_primerNombre == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_primerNombre));
            }
            if ((Original_segundoNombre == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_segundoNombre));
            }
            if ((Original_primerApellido == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_primerApellido));
            }
            if ((Original_segundoApellido == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_segundoApellido));
            }
            if ((Original_cliente.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_cliente.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TProductoTableAdapter : System.ComponentModel.Component {
        
        private System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private System.Data.Odbc.OdbcConnection _connection;
        
        private System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TProductoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.Odbc.OdbcDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TProducto";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("codigo", "codigo");
            tableMapping.ColumnMappings.Add("enchape", "enchape");
            tableMapping.ColumnMappings.Add("tipo", "tipo");
            tableMapping.ColumnMappings.Add("descripcion", "descripcion");
            tableMapping.ColumnMappings.Add("noFicha", "noFicha");
            tableMapping.ColumnMappings.Add("precioCUP", "precioCUP");
            tableMapping.ColumnMappings.Add("precioCUC", "precioCUC");
            tableMapping.ColumnMappings.Add("suministrador", "suministrador");
            tableMapping.ColumnMappings.Add("color", "color");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.Odbc.OdbcCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TProducto] WHERE (([Id] = ?) AND ((? = 1 AND [codigo] IS NULL) OR ([codigo] = ?)) AND ((? = 1 AND [enchape] IS NULL) OR ([enchape] = ?)) AND ((? = 1 AND [tipo] IS NULL) OR ([tipo] = ?)) AND ((? = 1 AND [descripcion] IS NULL) OR ([descripcion] = ?)) AND ((? = 1 AND [noFicha] IS NULL) OR ([noFicha] = ?)) AND ((? = 1 AND [precioCUP] IS NULL) OR ([precioCUP] = ?)) AND ((? = 1 AND [precioCUC] IS NULL) OR ([precioCUC] = ?)) AND ((? = 1 AND [suministrador] IS NULL) OR ([suministrador] = ?)) AND ((? = 1 AND [color] IS NULL) OR ([color] = ?)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_Id", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Id", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_codigo", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "codigo", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_codigo", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "codigo", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_enchape", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "enchape", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_enchape", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "enchape", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_tipo", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "tipo", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_tipo", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "tipo", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_descripcion", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "descripcion", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_descripcion", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "descripcion", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_noFicha", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "noFicha", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_noFicha", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "noFicha", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_precioCUP", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "precioCUP", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_precioCUP", System.Data.Odbc.OdbcType.Numeric, 0, System.Data.ParameterDirection.Input, ((byte)(19)), ((byte)(4)), "precioCUP", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_precioCUC", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "precioCUC", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_precioCUC", System.Data.Odbc.OdbcType.Numeric, 0, System.Data.ParameterDirection.Input, ((byte)(19)), ((byte)(4)), "precioCUC", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_suministrador", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "suministrador", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_suministrador", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "suministrador", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_color", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "color", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_color", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "color", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [TProducto] ([codigo], [enchape], [tipo], [descripcion], [noFicha], [" +
                "precioCUP], [precioCUC], [suministrador], [color]) VALUES (?, ?, ?, ?, ?, ?, ?, " +
                "?, ?)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("codigo", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "codigo", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("enchape", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "enchape", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("tipo", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "tipo", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("descripcion", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "descripcion", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("noFicha", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "noFicha", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("precioCUP", System.Data.Odbc.OdbcType.Numeric, 0, System.Data.ParameterDirection.Input, ((byte)(19)), ((byte)(4)), "precioCUP", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("precioCUC", System.Data.Odbc.OdbcType.Numeric, 0, System.Data.ParameterDirection.Input, ((byte)(19)), ((byte)(4)), "precioCUC", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("suministrador", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "suministrador", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("color", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "color", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new System.Data.Odbc.OdbcCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [TProducto] SET [codigo] = ?, [enchape] = ?, [tipo] = ?, [descripcion] = ?, [noFicha] = ?, [precioCUP] = ?, [precioCUC] = ?, [suministrador] = ?, [color] = ? WHERE (([Id] = ?) AND ((? = 1 AND [codigo] IS NULL) OR ([codigo] = ?)) AND ((? = 1 AND [enchape] IS NULL) OR ([enchape] = ?)) AND ((? = 1 AND [tipo] IS NULL) OR ([tipo] = ?)) AND ((? = 1 AND [descripcion] IS NULL) OR ([descripcion] = ?)) AND ((? = 1 AND [noFicha] IS NULL) OR ([noFicha] = ?)) AND ((? = 1 AND [precioCUP] IS NULL) OR ([precioCUP] = ?)) AND ((? = 1 AND [precioCUC] IS NULL) OR ([precioCUC] = ?)) AND ((? = 1 AND [suministrador] IS NULL) OR ([suministrador] = ?)) AND ((? = 1 AND [color] IS NULL) OR ([color] = ?)))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("codigo", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "codigo", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("enchape", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "enchape", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("tipo", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "tipo", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("descripcion", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "descripcion", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("noFicha", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "noFicha", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("precioCUP", System.Data.Odbc.OdbcType.Numeric, 0, System.Data.ParameterDirection.Input, ((byte)(19)), ((byte)(4)), "precioCUP", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("precioCUC", System.Data.Odbc.OdbcType.Numeric, 0, System.Data.ParameterDirection.Input, ((byte)(19)), ((byte)(4)), "precioCUC", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("suministrador", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "suministrador", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("color", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "color", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_Id", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Id", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_codigo", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "codigo", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_codigo", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "codigo", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_enchape", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "enchape", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_enchape", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "enchape", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_tipo", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "tipo", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_tipo", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "tipo", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_descripcion", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "descripcion", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_descripcion", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "descripcion", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_noFicha", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "noFicha", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_noFicha", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "noFicha", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_precioCUP", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "precioCUP", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_precioCUP", System.Data.Odbc.OdbcType.Numeric, 0, System.Data.ParameterDirection.Input, ((byte)(19)), ((byte)(4)), "precioCUP", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_precioCUC", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "precioCUC", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_precioCUC", System.Data.Odbc.OdbcType.Numeric, 0, System.Data.ParameterDirection.Input, ((byte)(19)), ((byte)(4)), "precioCUC", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_suministrador", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "suministrador", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_suministrador", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "suministrador", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("IsNull_color", System.Data.Odbc.OdbcType.Int, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "color", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.Odbc.OdbcParameter("Original_color", System.Data.Odbc.OdbcType.NVarChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "color", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::Perfilac.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, codigo, enchape, tipo, descripcion, noFicha, precioCUP, precioCUC, sum" +
                "inistrador, color FROM TProducto";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.TProductoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.TProductoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.TProductoDataTable dataTable = new DataSet1.TProductoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.TProductoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "TProducto");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_codigo, System.Nullable<int> Original_enchape, System.Nullable<int> Original_tipo, string Original_descripcion, string Original_noFicha, System.Nullable<decimal> Original_precioCUP, System.Nullable<decimal> Original_precioCUC, string Original_suministrador, string Original_color) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_codigo == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_codigo));
            }
            if ((Original_enchape.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_enchape.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_tipo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_tipo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_descripcion == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_descripcion));
            }
            if ((Original_noFicha == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_noFicha));
            }
            if ((Original_precioCUP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_precioCUP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_precioCUC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_precioCUC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_suministrador == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_suministrador));
            }
            if ((Original_color == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_color));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string codigo, System.Nullable<int> enchape, System.Nullable<int> tipo, string descripcion, string noFicha, System.Nullable<decimal> precioCUP, System.Nullable<decimal> precioCUC, string suministrador, string color) {
            if ((codigo == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(codigo));
            }
            if ((enchape.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(enchape.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((tipo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(tipo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((descripcion == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(descripcion));
            }
            if ((noFicha == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(noFicha));
            }
            if ((precioCUP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(precioCUP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((precioCUC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(precioCUC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((suministrador == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(suministrador));
            }
            if ((color == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(color));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string codigo, 
                    System.Nullable<int> enchape, 
                    System.Nullable<int> tipo, 
                    string descripcion, 
                    string noFicha, 
                    System.Nullable<decimal> precioCUP, 
                    System.Nullable<decimal> precioCUC, 
                    string suministrador, 
                    string color, 
                    int Original_Id, 
                    string Original_codigo, 
                    System.Nullable<int> Original_enchape, 
                    System.Nullable<int> Original_tipo, 
                    string Original_descripcion, 
                    string Original_noFicha, 
                    System.Nullable<decimal> Original_precioCUP, 
                    System.Nullable<decimal> Original_precioCUC, 
                    string Original_suministrador, 
                    string Original_color) {
            if ((codigo == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(codigo));
            }
            if ((enchape.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(enchape.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((tipo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(tipo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((descripcion == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(descripcion));
            }
            if ((noFicha == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(noFicha));
            }
            if ((precioCUP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(precioCUP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((precioCUC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(precioCUC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((suministrador == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(suministrador));
            }
            if ((color == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(color));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Id));
            if ((Original_codigo == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_codigo));
            }
            if ((Original_enchape.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_enchape.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_tipo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_tipo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((Original_descripcion == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_descripcion));
            }
            if ((Original_noFicha == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_noFicha));
            }
            if ((Original_precioCUP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_precioCUP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            if ((Original_precioCUC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_precioCUC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            if ((Original_suministrador == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_suministrador));
            }
            if ((Original_color == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_color));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591